# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main
- develop

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '09ede222-72d3-46b3-9b0a-7d1805a7b465'
  imageRepository: 'supernode'
  containerRegistry: 'defiwallet.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
    
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    addImageTags: |
      beta
  # add docker image tags for builds triggered for tag branch (we assume that we only tag on master)
  # (used instead of trigger for master branch: see https://tributech.atlassian.net/wiki/spaces/TM/pages/99614725/Branches+Build-Pipelines+Tags#Issue-with-merge%2Fbuild-for-master-branch)
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags') }}:
    addImageTags: |
      beta
      $(RELEASE_VERSION)
      
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    addImageTags: |
      beta
      stable
      latest
      $(RELEASE_VERSION)
      
  # add docker image tags for builds triggered from release branch
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/release') }}:
    addImageTags: |
      beta
      $(RELEASE_VERSION)

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: BuildAndPublish
    steps:
    - checkout: self
      submodules: true
      persistCredentials: true
    - script: |
        VERSION=$(echo "$(Build.SourceBranch)" | grep -o '[0-9]\+\.[0-9]\+\(\.[0-9]\+\)\?')
        echo "##vso[task.setvariable variable=RELEASE_VERSION;]$VERSION"
      
    displayName: 'Parse and set release version'
    condition: or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'), startsWith(variables['Build.SourceBranch'], 'refs/tags'), startsWith(variables['Build.SourceBranch'], 'refs/heads/main'))
    
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          alpha
          ${{ variables.addImageTags }}
